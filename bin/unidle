#!/usr/bin/perl

# this is the output of `w`, sorted by idle time
#
# (ie. its purpose is to show which users aren't idle)
#
# This has been tested on Linux only; it probably doesn't work on other un*xes.

    use strict;
    use warnings;

    use POSIX;
    use Data::Dumper;

    ## configuration
    use constant SHOW_FULL_USERNAME => 1;
    use constant INCLUDE_LOGOUTS => 1;


## read output of `w`
my @w = qx[w];


## output the header; don't try to sort it
print splice @w, 0, 2;


## sort by idle time  (least idle at the bottom)
my %idle_time = map {$_ => -M "/dev/" . (split)[1]} @w;
if (INCLUDE_LOGOUTS) {
    my $last_logout = last_logout();
    while (my($user, $when) = each %$last_logout)  {
        push @w, my $str = sprintf "%-12s logged out   %s", $user, POSIX::strftime("%a %F %R", localtime $when);
        $idle_time{$str} = ($^T - $when) / 86400;
    }
}
@w =  sort {$idle_time{$b} <=> $idle_time{$a}}   @w;


## print the entries
if (!SHOW_FULL_USERNAME) {
    print @w;
} else {
    my %seen;
    my @out;
    foreach (reverse @w) {
        chomp;
        next if $seen{my $user = (split)[0]}++;
        push @out, sprintf "%-85s %s\n",  $_,  (getpwnam $user)[6];
    }
    print reverse @out;
}


# parse wtmp
sub last_logout {
    my $typedef = "l i Z32 Z4 Z32 A256 l l i i a16 Z20";
    my @fnames = qw[ type pid line id user host exit session tv_sec tv_usec addr_v6 unused ];
    open my $fin, '<', '/var/log/wtmp'  or die $!;
    local $/ = \(length pack $typedef);       # read fixed-length records
    my %last_logout;
    my %user_line;      # line => user
    while (<$fin>) {
        my %ent;
        @ent{@fnames} = unpack $typedef, $_;
        $user_line{$ent{line}} = $ent{user}     if ($ent{type} == 7);
        next unless $ent{type} == 8;
        $last_logout{$user_line{$ent{line}} || next} = $ent{tv_sec};
    }
    return \%last_logout;
}



sub parse_wtmp {
    my ($fnames, $ftypes) = unzip(qw[
        type    l
        pid     i
        line    Z32
        id      Z4
        user    Z32
        host    A256
        exit    l
        session l
        tv_sec  i
        tv_usec i
        addr_v6 a16
        unused  Z20
    ]);
    $ftypes = join(" ", @$ftypes);
    open my $fin, '<', '/var/log/wtmp'  or die $!;
    local $/ = \(length pack $ftypes);       # read fixed-length records
    while (<$fin>) {
        my %ent;
        @ent{@$fnames} = unpack $ftypes, $_;
        $ent{tv} = ~~localtime $ent{tv_sec};
        $ent{addr_v6} = join ':', unpack 'H4H4H4H4H4H4H4H4', $ent{addr_v6};
        print Dumper \%ent;
    }
    exit;
}



# split [1,'a',2,'b',3,'c'] into [[1,2,3],['a','b','c']]
sub unzip {my($i,$j)=(0,0); [grep{++$i%2}@_],[grep{$j++%2}@_]}
