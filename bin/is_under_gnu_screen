#!/usr/bin/perl

# Sets $? to indicate whether we're currently running under GNU Screen (on the current host, anyway; if you need to do
# this across hosts, then use 'termdetect').

    use strict;
    use warnings;

    use Data::Dumper;

my $pid = $$;

while ($pid > 0) {
    my $info = get_proc_info($pid);
    #print Dumper($info);       # debug only

    if ($info->{comm} eq '(screen)'
            || $info->{comm} =~ /^[^a-z]*tmux\b/) 
    {
        exit 0;
    }

    $pid = $info->{ppid};

    last if ($^O eq 'cygwin' && $pid <= 1);
    last if ($pid eq 'S');
}

exit 1;


# Converts /proc/$pid/stat into a Perl data structure:
#
#       return {
#           pid => ...
#           comm => ...
#           state => ...
#           ppid => ...
#           pgrep => ...
#           session => ...
#           tty_nr => ...
#       };
#
# For more info, see `man 5 proc`, and ctrl-f for "Status information about".
sub get_proc_info {
    my ($pid) = @_;

    open my $fin, '<', "/proc/$pid/stat"
        or die "Can't open /proc/$pid/stat: $!";
    my %proc_info;
    # see man proc(5)
    # (this funky syntax is called a "assigning to a hash slice")
    @proc_info{qw(pid comm state ppid pgrep session tty_nr)} = split ' ', <$fin>;
    close $fin;

    return \%proc_info;
}
