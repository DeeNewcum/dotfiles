#!/usr/bin/env perl

# Scratchpad for various languages
#
#       $ t pl
#               create a new scratchpad file, insert a basic Perl header in it, and open up the editor to it
#
#       $ t py
#               same, but for Python
#
#       $ t pl -
#               edit ALL recent Perl scratchpad files, most recent first   (don't create a new file)
#               (in Vim, use :n and :prev to move between them)
#
# Creates a temporary file in a specific directory, chmod +x's it, adds the appropriate she-bang at the top,
# and opens it up with ${EDITOR}.
#
# Doesn't delete the file afterwards, as these are small, and may contain insights that I want to revisit.

    use strict;
    use warnings;

    use File::Temp;
    use Text::ParseWords;

    sub TEMP_DIR {"$ENV{HOME}/tmp/proglang/"}

    #$ENV{EDITOR} = "vi" unless $ENV{EDITOR};
    #$ENV{EDITOR} = q{vim +999 -c startinsert};
    $ENV{EDITOR} = q{vim +999};



my $proglang = shift
        or die "Please specify a proglang file extension (eg. .pl, .py, .rb, etc)\n";

my $open_recent = (@ARGV && $ARGV[0] eq '-');


# Make sure the requested proglang exists
my $template = "$ENV{HOME}/.vim/templates/$proglang.tmpl";
-e $template
    or die "Proglang '$proglang' does not exist.\n";
my $temp_dir = TEMP_DIR . $proglang;

# Was the '-' argument used?
my @cmd = Text::ParseWords::shellwords($ENV{EDITOR}) or die "Unable to parse \$EDITOR\n";
if ($open_recent) {
    my @files = sort {(stat $b)[9] <=> (stat $a)[9]} glob "$temp_dir/*";
    die "no files found\n"      if (!@files);
    #use Data::Dumper; print Dumper \@files;  exit;
    exec @cmd, @files;
}

# Create random filename
system "mkdir -p " . $temp_dir;
my ($fh, $filename) = File::Temp::tempfile( DIR => $temp_dir );

# Write out the template
open my $tmpl, '<', $template        or die;
print $fh @{[  <$tmpl>   ]};
chmod 0755, $filename;
close $fh;

# Fire up the editor
exec @cmd, $filename       or die;
