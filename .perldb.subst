use Term::ANSIColor;

parse_options('arrayDepth= hashdepth=');
    

sub afterinit {
    # An example of how to stuff basic debug commands into the type-ahead buffer.
    #push @DB::typeahead, "b 4", "b 6"; }

    check_readline();
}


# If Term::ReadLine::Gnu isn't installed, then backspace doesn't work right, so warn the user.
sub check_readline {
    # try to load Term::ReadLine
    $DB::term || DB::setterm();
    # Was it able to be loaded successfully?
    if (@Term::ReadLine::ISA == 1) {
        print color('black', 'on_red');
        print "Backspace won't work properly without installing Term::ReadLine::Gnu.\n";
        print color('reset');
    }
}


# Always show the couple of lines around the current line, before every prompt.
# https://perldoc.perl.org/perldebug#%7B-%5B-command-%5D
# (unfortunately this wasn't availble prior to Perl v5.9.0)
$] > 5.009 and DB::cmd_prepost('{{', 'v', undef);

# print_lineinfo() displays TWO pieces of information: 1) the current
# file/line-number, and 2) the CODE located at the current file/line-number.
# Suppress #2 (because it's already displayed using cmd_prepost()), but keep #1.
$] > 5.009
and *DB::print_lineinfo = sub {
    local $_ = join("", @_);
    s/\):.*/):/s;
    print "$_\n";
};

# Use color in the prompt.
use DB::ColorPrompt 'on_blue';
